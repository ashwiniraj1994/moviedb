<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd"
        >
    <context:property-placeholder location="/WEB-INF/spring/application.properties"/>

    <!-- Enable annotation style of managing transactions -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- Declare a datasource that has pooling capabilities-->
    <bean class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close" id="dataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="${app.jdbc.url}"/>
        <property name="username" value="${app.jdbc.username}"/>
        <property name="password" value="${app.jdbc.password}"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
        <property name="testWhileIdle" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="1800000"/>
        <property name="numTestsPerEvictionRun" value="3"/>
        <property name="minEvictableIdleTimeMillis" value="1800000"/>
        <property name="initialSize" value="${app.jdbc.initialSize}"/>
        <property name="maxTotal" value="${app.jdbc.maxTotal}"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan">
            <list>
                <value>com.moviesdb.domain</value>
                <value>com.moviesdb.model</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.cache.user_query_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
               	<prop key="hibernate.jdbc.batch_size">${app.hibernate.batchSize}</prop>
                <prop key="javax.persistence.validation.group.pre-persist">javax.validation.groups.Default</prop>
                <prop key="javax.persistence.validation.group.pre-update">javax.validation.groups.Default</prop>
                <prop key="javax.persistence.validation.mode">
                    ddl, callback
                </prop>
            </props>
        </property>


    </bean>


    <bean id="beanValidationEventListener" class="org.hibernate.cfg.beanvalidation.BeanValidationEventListener"/>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--&lt;!&ndash; Flyway for auto database schema upgrade &ndash;&gt;
    <bean id="flyway"  class="com.googlecode.flyway.core.Flyway"
            init-method="migrate" lazy-init="false" depends-on="dataSource">
        <property name="locations" value="/db/migration/" />
        <property name="dataSource" ref="dataSource" />
        <property name="initOnMigrate" value="true" />
    </bean>-->



</beans>

 
